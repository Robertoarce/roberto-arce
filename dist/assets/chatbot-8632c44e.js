import{_ as p,o as l,c as d,a as r,F as g,r as h,b as m,f,v as y,n as x,t as c,e as b}from"./index-fbdafff4.js";const w={name:"ChatInterface",data(){return{messages:[],userInput:"",isLoading:!1,apiUrl:"http://localhost:8000/chat",apiKey:"i-know-i-will-forget-this-key"}},methods:{handleKeyDown(s){s.key==="Enter"&&s.shiftKey&&(s.preventDefault(),this.sendMessage())},async sendMessage(){if(!this.userInput.trim()||this.isLoading)return;const s={type:"user",text:this.userInput.trim(),timestamp:new Date};this.messages.push(s);const a=this.userInput.trim();this.userInput="",this.isLoading=!0;try{const n={inputs:a};console.log("Sending request with payload:",n),console.log("Stringified payload:",JSON.stringify(n));const i=await fetch(this.apiUrl,{method:"POST",headers:{"Content-Type":"application/json","X-API-Key":this.apiKey,Accept:"application/json"},body:JSON.stringify(n)});if(console.log("Response status:",i.status),!i.ok){const o=await i.text();console.error("Full error response:",o);const e=JSON.parse(o);throw console.error("Parsed error data:",e),new Error(`Failed to get response: ${o}`)}const t=await i.json();console.log("Successful response data:",t),this.messages.push({type:"bot",text:t.generated_text,timestamp:new Date})}catch(n){console.error("Detailed error:",n),this.messages.push({type:"bot",text:`Sorry, I can't answer... the server is not connected. 
 Ask Roberto to plug-me in! ðŸ™„`,timestamp:new Date})}finally{this.isLoading=!1,this.$nextTick(()=>{this.scrollToBottom()})}},scrollToBottom(){const s=this.$refs.messagesContainer;s.scrollTop=s.scrollHeight},formatTimestamp(s){return new Intl.DateTimeFormat("default",{hour:"numeric",minute:"numeric"}).format(s)}}},_={class:"h-screen bg-gray-700 p-10 flex flex-col overflow-auto"},v={ref:"messagesContainer",class:"flex-1 overflow-y-auto space-y-4 mb-4 text-2xl"},T={class:"flex items-start gap-3"},k={class:"w-8 h-8 flex items-center justify-center rounded-full bg-gray-600"},D={class:"text-white break-words whitespace-pre-wrap text-2xl"},I={class:"text-gray-400 text-sm mt-2 self-end"},S={key:0,class:"flex flex-col rounded-lg p-4 bg-gray-800 max-w-[80%]"},K=b('<div class="flex items-start gap-3"><div class="w-8 h-8 flex items-center justify-center rounded-full bg-gray-600"> ðŸ¤– </div><div class="flex space-x-2"><span class="w-2 h-2 bg-gray-400 rounded-full animate-bounce"></span><span class="w-2 h-2 bg-gray-400 rounded-full animate-bounce delay-100"></span><span class="w-2 h-2 bg-gray-400 rounded-full animate-bounce delay-200"></span></div></div>',1),L=[K],C={class:"flex gap-4 mt-auto pb-20"},M=["disabled"],N=["disabled"];function j(s,a,n,i,t,o){return l(),d("div",_,[r("div",v,[(l(!0),d(g,null,h(t.messages,(e,u)=>(l(),d("div",{key:u,class:x(["flex flex-col","rounded-lg p-4",e.type==="user"?"bg-blue-600 ml-auto":"bg-gray-800","max-w-[80%]"])},[r("div",T,[r("div",k,c(e.type==="user"?"ðŸ¥¸":"ðŸ¤–"),1),r("div",D,c(e.text),1)]),r("div",I,c(o.formatTimestamp(e.timestamp)),1)],2))),128)),t.isLoading?(l(),d("div",S,L)):m("",!0)],512),r("div",C,[f(r("textarea",{"onUpdate:modelValue":a[0]||(a[0]=e=>t.userInput=e),onKeydown:a[1]||(a[1]=(...e)=>o.handleKeyDown&&o.handleKeyDown(...e)),placeholder:"Type your message... (Shift + Enter to send)",disabled:t.isLoading,class:"flex-1 rounded-lg bg-gray-800 text-white md:text-2xl placeholder-gray-400 p-4 focus:outline-none focus:ring-2 focus:ring-blue-500 resize-none",rows:"3"},null,40,M),[[y,t.userInput]]),r("button",{onClick:a[2]||(a[2]=(...e)=>o.sendMessage&&o.sendMessage(...e)),disabled:t.isLoading||!t.userInput.trim(),class:"px-6 py-2 bg-blue-600 text-white rounded-lg hover:bg-green-700 disabled:opacity-50 disabled:cursor-not-allowed focus:outline-none focus:ring-2 focus:ring-blue-500"}," Send ",8,N)])])}const F=p(w,[["render",j]]);export{F as default};
